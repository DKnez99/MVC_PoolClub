// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PoolClub.Models;

namespace PoolClub.Models.Migrations
{
    [DbContext(typeof(PoolClubDbContext))]
    partial class PoolClubDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PoolClub.Models.AppUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "johndoe@poolclub.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "johndoe123",
                            PhoneNumber = "0781235645",
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Email = "maryann@poolclub.com",
                            FirstName = "Mary",
                            LastName = "Ann",
                            Password = "maryann123",
                            PhoneNumber = "0763214543",
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            Email = "markspencer@poolclub.com",
                            FirstName = "Mark",
                            LastName = "Spencer",
                            Password = "markspencer123",
                            PhoneNumber = "0762253312",
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 4,
                            Email = "bobmarly@yahoo.com",
                            FirstName = "Bob",
                            LastName = "Marly",
                            Password = "bobmarly123",
                            PhoneNumber = "0712516674",
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            Email = "janejameson@gmail.com",
                            FirstName = "Jane",
                            LastName = "Jameson",
                            Password = "janejameson213",
                            PhoneNumber = "0711194203",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("PoolClub.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("TableId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("PoolClub.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Staff"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "Visitor"
                        });
                });

            modelBuilder.Entity("PoolClub.Models.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.HasKey("TableId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableId = 1,
                            Floor = 1
                        },
                        new
                        {
                            TableId = 2,
                            Floor = 1
                        },
                        new
                        {
                            TableId = 3,
                            Floor = 1
                        },
                        new
                        {
                            TableId = 4,
                            Floor = 2
                        },
                        new
                        {
                            TableId = 5,
                            Floor = 2
                        },
                        new
                        {
                            TableId = 6,
                            Floor = 2
                        });
                });

            modelBuilder.Entity("PoolClub.Models.AppUser", b =>
                {
                    b.HasOne("PoolClub.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PoolClub.Models.Reservation", b =>
                {
                    b.HasOne("PoolClub.Models.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PoolClub.Models.AppUser", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PoolClub.Models.AppUser", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("PoolClub.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PoolClub.Models.Table", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
